{"version":3,"sources":["context/context.js","reducers/reducer.js","components/DynamicSizingVideo.jsx","components/AppContent.jsx","App.js","index.js"],"names":["RootContext","React","createContext","RootProvider","Provider","reducerInitialState","reducer","state","type","mutators","undefined","console","log","DynamicSizingVideo","props","videoContainerRef","useRef","useState","width","setWidth","aspectRatio","setAspectRatio","id","widthFraction","getVideo","document","getElementById","useEffect","window","innerWidth","video","newWidth","newHeight","style","height","border","useEventListener","current","display","videoWidth","videoHeight","appendChild","ref","TabPane","Tabs","AppContent","basicTextStyle","fontSize","createDescriptions","keyPrefix","paragraphs","content","contents","i","length","push","marginTop","key","justify","align","span","wrapWithCenteringRow","header","title","margin","color","fontVariant","background","borderRadius","padding","lineHeight","boxSizing","whiteSpace","listStyle","cursor","subtitle","animationsTab","description","staticConfigsTab","layoutTab","subTitle","backIcon","extra","icon","href","target","footer","tabBarStyle","borderBottom","defaultActiveKey","tab","marginBottom","App","useReducer","dispatch","value","ReactDOM","render"],"mappings":"8OAEaA,EAAcC,IAAMC,gBACpBC,EAAeH,EAAYI,S,aCD3BC,G,OAAsB,IAI5B,SAASC,EAAQC,EAAjB,GAA0C,IAAD,mBAAhBC,EAAgB,KAEtCC,GAFsC,KAE3B,CAEb,KAAQ,WACJ,OAAO,eAAKF,MAUpB,YALuBG,IAAnBD,EAASD,IACTG,QAAQC,IAAI,0BAA2BJ,GAIpCC,EAASD,K,yDCgCLK,MAlDf,SAA4BC,GAExB,IAAMC,EAAoBC,iBAAO,MAFF,EAGLC,mBAAS,GAHJ,mBAGxBC,EAHwB,KAGjBC,EAHiB,OAIOF,mBAAS,GAJhB,mBAIxBG,EAJwB,KAIXC,EAJW,KAKvBC,EAAsBR,EAAtBQ,GAAIC,EAAkBT,EAAlBS,cAERC,EAAW,kBAAMC,SAASC,eAAeJ,IAuC7C,OApCAK,qBAAU,WACNR,EAASS,OAAOC,cACjB,IAGHF,qBAAU,WACN,IAAIG,EAAQN,IACZ,GAAIM,EAAO,CACP,IAAIC,EAAWb,EAAQK,EACnBS,EAAYZ,EAAcW,EAC9BD,EAAMG,MAAMf,MAAZ,UAAuBa,EAAvB,MACAD,EAAMG,MAAMC,OAAZ,UAAwBF,EAAxB,MACAF,EAAMG,MAAME,OAAS,uBAE1B,CAACjB,IAGJkB,YAAiB,UAAU,WACvBjB,EAASS,OAAOC,eAIpBF,qBAAU,WACN,GAAIZ,EAAkBsB,QAAS,CAE3B,IAAIP,EAAQN,IAEZM,EAAMG,MAAMK,QAAU,QAJK,IAMrBC,EAA4BT,EAA5BS,WAAYC,EAAgBV,EAAhBU,YAClBnB,EAAgBmB,EAAcD,GAE9BxB,EAAkBsB,QAAQI,YAAYX,MAE3C,CAACf,IAEG,yBAAK2B,IAAK3B,KC7Cb4B,EAAYC,IAAZD,QAkJOE,MAhJf,SAAoB/B,GAEhB,IAAMgC,EAAiB,CAAEC,SAAU,IAG7BC,EAAqB,SAACC,EAAWC,GAOnC,IANA,IAAYC,EAKRC,EAAW,GACNC,EAAI,EAAGA,EAAIH,EAAWI,OAAQD,IACnCD,EAASG,KACL,kBAAC,IAAD,CACAtB,MAAc,IAANoB,EAAU,CAAEG,UAAW,OAAU,GACzCC,IAAKR,EAAS,UAAMI,IAChB,kBAAC,IAAD,KACI,uBAAGpB,MAAOa,GAAiBI,EAAWG,OAKtD,OAjBYF,EAiBAC,EAjBY,kBAAC,IAAD,CAAK5C,KAAK,OAAOkD,QAAQ,SAASC,MAAM,UACpC,kBAAC,IAAD,CAAKC,KAAM,IACNT,KAkB/BU,EAAuB,SAACV,GAAD,OACzB,kBAAC,IAAD,CAAK3C,KAAK,OAAOkD,QAAQ,eAAeC,MAAM,UAC1C,kBAAC,IAAD,KACKR,KAKPW,EAAS,CACXC,MACI,kBAAC,IAAD,CAAKvD,KAAK,OAAOkD,QAAQ,eAAeC,MAAM,UAC1C,kBAAC,IAAD,KACI,uBAAG1B,MAAO,CAAEK,QAAS,eAAgB0B,OAAQ,eAA7C,gCAEJ,0BAAM/B,MAAO,CACTgC,MAAO,UACP/B,OAAQ,OACR8B,OAAQ,EACRE,YAAa,eACbC,WAAY,UACZhC,OAAQ,oBACRiC,aAAc,EACdC,QAAS,QACTC,WAAY,OACZC,UAAW,aACXC,WAAY,SACZC,UAAW,OACX1B,SAAU,OACV2B,OAAQ,YAdZ,SAoBRC,SAAS,iIAQPC,EAAgB,CAClBC,YAAa7B,EAAmB,aAAc,CAAC,yNAAD,yaAe9ClB,MAAO+B,EAAqB,kBAAC,EAAD,CAAoBvC,GAAG,iBAAiBC,cAAe,QAEjFuD,EAAmB,CACrBD,YAAa7B,EAAmB,SAAU,CAAC,8MAAD,oHAS1ClB,MAAO+B,EAAqB,kBAAC,EAAD,CAAoBvC,GAAG,cAAcC,cAAe,QAE9EwD,EAAY,CACdF,YAAa7B,EAAmB,SAAU,CAAC,sLAM3ClB,MAAO+B,EAAqB,kBAAC,EAAD,CAAoBvC,GAAG,cAAcC,cAAe,QAGpF,OAEI,kBAAC,IAAD,CACAwC,MAAOD,EAAOC,MACdiB,SAAUlB,EAAOa,SACjBM,UAAU,EACVC,MAAO,kBAAC,IAAD,CAAQC,KAAK,SAASC,KAAK,oDAAoDC,OAAO,UAAtF,QACPC,OACI,kBAAC,IAAD,CACAC,YArDG,CACHC,aAAc,gCAqDdC,iBAAiB,KACb,kBAAC9C,EAAD,CAAS+C,IAAI,aAAajC,IAAI,KAC1B,yBAAKxB,MAAO,CAAE0D,aAAc,QACvBf,EAAcC,YACdD,EAAc9C,QAGvB,kBAACa,EAAD,CAAS+C,IAAI,wBAAwBjC,IAAI,KACrC,yBAAKxB,MAAO,CAAE0D,aAAc,QACvBb,EAAiBD,YACjBC,EAAiBhD,QAG1B,kBAACa,EAAD,CAAS+C,IAAI,SAASjC,IAAI,KACtB,yBAAKxB,MAAO,CAAE0D,aAAc,QACvBZ,EAAUF,YACVE,EAAUjD,YCrHpB8D,MAZf,SAAa9E,GAAQ,IAAD,EAEU+E,qBAAWvF,EAASD,GAF9B,mBAETE,EAFS,KAEFuF,EAFE,KAIhB,OACI,kBAAC3F,EAAD,CAAc4F,MAAO,CAAExF,QAAOuF,aAC1B,kBAAC,EAAD,QCVZE,IAASC,OAAO,kBAAC,EAAD,MAASxE,SAASC,eAAe,W","file":"static/js/main.5f6c4c33.chunk.js","sourcesContent":["import React, { useContext } from \"react\"; \n\nexport const RootContext = React.createContext();\nexport const RootProvider = RootContext.Provider;\n\nexport function useRootContext() {\n    return useContext(RootContext); \n}","import _ from \"lodash\";  \n\nexport const reducerInitialState = {\n\n};\n\nexport function reducer(state, [type, payload]) {\n\n    const mutators = { \n\n        'test': () => {\n            return { ...state};  \n        },\n\n    }; \n\n    if (mutators[type] === undefined) {\n        console.log(\"UNDEFINED MUTATOR KEY: \", type); \n        debugger; \n    }\n\n    return mutators[type](); \n\n}","import React, { useRef, useEffect, useState } from 'react'; \nimport useEventListener from \"@use-it/event-listener\";\n\nfunction DynamicSizingVideo(props) {\n\n    const videoContainerRef = useRef(null); \n    const [width, setWidth] = useState(0); \n    const [aspectRatio, setAspectRatio] = useState(0); \n    const { id, widthFraction } = props; \n\n    let getVideo = () => document.getElementById(id); \n\n    // Get dimensions once upon page load \n    useEffect(() => {\n        setWidth(window.innerWidth); \n    }, []);\n\n    // whenever the width changes, re-style the video \n    useEffect(() => {\n        let video = getVideo(); \n        if (video) {\n            let newWidth = width * widthFraction; \n            let newHeight = aspectRatio * newWidth; \n            video.style.width = `${newWidth}px`;\n            video.style.height = `${newHeight}px`;  \n            video.style.border = '2px solid #ecedf0'; \n        }\n    }, [width]); \n\n    // width is synchronized to width of window \n    useEventListener('resize', () => {\n        setWidth(window.innerWidth); \n    }); \n\n    // store reference to video node on application load \n    useEffect(() => {  \n        if (videoContainerRef.current) {\n            // get the video \n            let video = getVideo(); \n            // ensure it is displayed \n            video.style.display = 'block'; \n            // save the aspect ratio of the video \n            let { videoWidth, videoHeight } = video; \n            setAspectRatio( videoHeight / videoWidth ); \n            // add the video to its container \n            videoContainerRef.current.appendChild(video); \n        } \n    }, [videoContainerRef]); \n\n    return <div ref={videoContainerRef} />; \n\n}; \n\nexport default DynamicSizingVideo; ","import React, { useEffect, useState, useRef } from 'react'; \nimport { Row, Col, PageHeader, Tabs, Button, Divider } from \"antd\"; \nimport DynamicSizingVideo from \"./DynamicSizingVideo\"; \n\nconst { TabPane } = Tabs; \n\nfunction AppContent(props) {\n\n    const basicTextStyle = { fontSize: 18 };\n    \n\n    const createDescriptions = (keyPrefix, paragraphs) => {\n        let wrap = (content) => <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                                    <Col span={16}>\n                                        {content}\n                                    </Col>\n                                </Row>;\n        let contents = []; \n        for (let i = 0; i < paragraphs.length; i++) {\n            contents.push(\n                <Row \n                style={ i === 0 ? { marginTop: \"1em\" } : {} } \n                key={keyPrefix + `${i}`}>\n                    <Col>\n                        <p style={basicTextStyle}>{paragraphs[i]}</p>\n                    </Col>\n                </Row>\n            ); \n        }\n        return wrap(contents); \n    }; \n\n    const wrapWithCenteringRow = (content) => (\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n            <Col>\n                {content}\n            </Col>\n        </Row>\n    ); \n\n    const header = {\n        title: (\n            <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                <Col>\n                    <p style={{ display: 'inline-block', margin: '0 .8em 0 0' }}>Trippy Graphics Experiments</p>\n                </Col>\n                <span style={{ \n                    color: '#1890ff', \n                    height: 'auto', \n                    margin: 0, \n                    fontVariant: 'tabular-nums', \n                    background: '#e6f7ff',\n                    border: '1px solid #91d5ff',\n                    borderRadius: 4, \n                    padding: '0 8px', \n                    lineHeight: '24px', \n                    boxSizing: 'border-box', \n                    whiteSpace: 'nowrap',\n                    listStyle: 'none', \n                    fontSize: '14px', \n                    cursor: 'default'\n                }}>\n                    beta\n                </span>\n            </Row>\n        ), \n        subtitle:  `An animation engine based on interpolation between \n                    user-defined states of a generative geometric system`, \n    }; \n    const tabs = {\n        style: {\n            borderBottom: '1px solid rgb(235, 237, 240)',\n        }\n    }; \n    const animationsTab = {\n        description: createDescriptions('animations', [\n            `\n            The animation view of the application offers an interface for creating a sequential chain \n            of interpolations between different static configurations of the geometric system.\n            `, \n            `\n            Each animation can be programmed with a specific duration, easing function, and delay.\n            `, \n            `\n            By coming up with a wide variety of unique static configurations, \n            experimenting with the order of static configurations in the chain, \n            and tweaking animation parameters, \n            users can produce a wide variety of interesting visual effects. \n            `\n        ]),\n        video: wrapWithCenteringRow(<DynamicSizingVideo id=\"animation-clip\" widthFraction={.65} />)\n    };\n    const staticConfigsTab = {\n        description: createDescriptions('static', [\n            `\n            The static configuration view can be used to tweak parameters of the geometric\n            system in order to find interesting candidate configurations for use in animations.\n            `, \n            `\n            Parameters include continuous numeric values, boolean values, and a color palette. \n            `\n        ]), \n        video: wrapWithCenteringRow(<DynamicSizingVideo id=\"static-clip\" widthFraction={.65} />)\n    }; \n    const layoutTab = {\n        description: createDescriptions('layout', [\n            `\n            Users can manipulate the view layout to maximize screen space while experimenting \n            with different static configurations and animations. \n            `\n        ]), \n        video: wrapWithCenteringRow(<DynamicSizingVideo id=\"layout-clip\" widthFraction={.65} />)\n    }; \n\n    return (\n\n        <PageHeader\n        title={header.title}\n        subTitle={header.subtitle}\n        backIcon={false}\n        extra={<Button icon=\"github\" href=\"https://github.com/brycemorrow4564/TrippyGraphics\" target=\"_blank\">Code</Button>}\n        footer={\n            <Tabs \n            tabBarStyle={tabs.style}\n            defaultActiveKey=\"1\">\n                <TabPane tab=\"Animations\" key=\"1\" >\n                    <div style={{ marginBottom: '1em' }}>\n                        {animationsTab.description}\n                        {animationsTab.video}\n                    </div>     \n                </TabPane>\n                <TabPane tab=\"Static Configurations\" key=\"2\" >\n                    <div style={{ marginBottom: '1em' }}>\n                        {staticConfigsTab.description}\n                        {staticConfigsTab.video}\n                    </div> \n                </TabPane>\n                <TabPane tab=\"Layout\" key=\"3\" >\n                    <div style={{ marginBottom: '1em' }}>\n                        {layoutTab.description}\n                        {layoutTab.video}\n                    </div> \n                </TabPane>\n            </Tabs>\n        }/>\n\n    ); \n\n}; \n\nexport default AppContent; ","import React, { useReducer } from \"react\"; \nimport { RootProvider } from \"./context/context\"; \nimport { reducer, reducerInitialState } from \"./reducers/reducer\"; \nimport AppContent from \"./components/AppContent\"; \n\n/*\nDemo Video: \n    * Loading, Saving, and Editing static configurations + colors \n    * Loading and running an animation composed of static configurations\n*/ \n\nfunction App(props) {\n\n    const [state, dispatch] = useReducer(reducer, reducerInitialState); \n\n    return (\n        <RootProvider value={{ state, dispatch }}>\n            <AppContent/>\n        </RootProvider>\n    ); \n\n}\n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}