{"version":3,"sources":["components/DynamicSizingVideo.jsx","components/AppContent.jsx","App.js","index.js"],"names":["DynamicSizingVideo","props","videoContainerRef","useRef","useState","window","innerWidth","width","setWidth","aspectRatio","setAspectRatio","id","widthFraction","useEffect","video","document","getElementById","newWidth","newHeight","style","display","height","border","useEventListener","readyState","ratio","videoHeight","videoWidth","addEventListener","current","appendChild","ref","TabPane","Tabs","AppContent","Fragment","title","type","justify","align","className","subTitle","backIcon","extra","icon","href","target","rel","span","defaultActiveKey","tab","key","forceRender","margin","marginBottom","paddingTop","offset","marginTop","shape","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.3551b853.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'; \nimport useEventListener from \"@use-it/event-listener\";\n\nfunction DynamicSizingVideo(props) {\n\n    const videoContainerRef = useRef( null ); \n    const [width, setWidth] = useState( window.innerWidth ); \n    const [aspectRatio, setAspectRatio] = useState( 0 ); \n    const { id, widthFraction } = props; \n\n    // whenever the width changes, re-style the video \n    useEffect(() => {\n        let video = document.getElementById(id); \n        if (video && aspectRatio) {\n            let newWidth = width * widthFraction; \n            let newHeight = aspectRatio * newWidth; \n            video.style.display = 'block'; \n            video.style.width = `${newWidth}px`;\n            video.style.height = `${newHeight}px`;  \n            video.style.border = '2px solid #ecedf0'; \n        }\n    }, [width, aspectRatio, id, widthFraction]); \n\n    // width is synchronized to width of window \n    useEventListener('resize', () => {\n        setWidth(window.innerWidth); \n    }); \n\n    // compute aspect ratio of video when metadata attached \n    useEffect(() => {\n        if (!aspectRatio) {\n            let video = document.getElementById(id); \n            let ready = video.readyState === 4;\n            if (ready) {\n                let ratio = video.videoHeight / video.videoWidth; \n                setAspectRatio( ratio ); \n            } else {\n                video.addEventListener('loadedmetadata', () => {\n                    let video = document.getElementById(id); \n                    let ratio = video.videoHeight / video.videoWidth; \n                    setAspectRatio( ratio ); \n                }); \n            }\n        }\n    }, [aspectRatio, id]); \n\n    // move video to container on application startup\n    useEffect(() => {  \n        if (videoContainerRef.current) {\n            let video = document.getElementById(id); \n            videoContainerRef.current.appendChild(video); \n        } \n    }, [videoContainerRef, id]); \n\n    return <div ref={videoContainerRef} />; \n\n}; \n\nexport default DynamicSizingVideo; ","import React from 'react'; \nimport { Row, Col, PageHeader, Tabs, Button } from \"antd\"; \nimport DynamicSizingVideo from \"./DynamicSizingVideo\"; \n\nconst { TabPane } = Tabs; \n\nfunction AppContent(props) {\n\n    return <React.Fragment>\n\n        {/* Page Header */}\n        <PageHeader\n        title={\n            <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                <Col>\n                    <p className=\"page-title\">Trippy Graphics Experiments</p>\n                </Col>\n            </Row>\n        }\n        subTitle={\n            `An animation engine based on interpolation between \n             user-defined states of a generative geometric system`\n        }\n        backIcon={false}\n        extra={\n            <Button \n            icon=\"github\" \n            href=\"https://github.com/brycemorrow4564/TrippyGraphics\" \n            target=\"_blank\"\n            rel=\"noopener noreferrer\">Code</Button>}\n        />\n\n        {/* Page Content */}\n        <Row type=\"flex\" justify=\"center\">\n            <Col span={23}>\n                <Tabs\n                type=\"card\"\n                defaultActiveKey=\"1\"\n                className=\"top-tabs\">\n                    <TabPane\n                    tab=\"Interface\"\n                    key=\"1\"\n                    forceRender>\n                        <div style={{  margin: 10 }}>\n                            <div className=\"card-container\">\n                                <Tabs \n                                type=\"card\"\n                                defaultActiveKey=\"1\">\n                                    <TabPane tab=\"Animations\" key=\"1\" forceRender>\n                                        <div style={{ marginBottom: '1em' }}>\n                                            <Row type='flex' align=\"middle\" style={{ paddingTop: 10 }}>\n                                                <Col span={6} offset={2}>\n                                                    <p className=\"description\">\n                                                    The <b>animation view</b> of the application offers an interface for creating a sequential chain \n                                                    of interpolations between different static configurations of the geometric system.\n                                                    </p>\n                                                    <p className=\"description\">\n                                                    Each animation can be programmed with a specific duration, easing function, and delay.\n                                                    </p>\n                                                    <p className=\"description\">\n                                                    By coming up with a wide variety of unique static configurations, \n                                                    experimenting with the order of static configurations in the chain, \n                                                    and tweaking animation parameters, \n                                                    users can produce a wide variety of interesting visual effects. \n                                                    </p>\n                                                </Col>\n                                                <Col offset={2}>\n                                                    <DynamicSizingVideo id=\"animation-clip\" widthFraction={.5} />\n                                                </Col>\n                                            </Row>\n                                        </div>     \n                                    </TabPane>\n                                    <TabPane tab=\"Static Configurations\" key=\"2\" forceRender>\n                                        <div style={{ marginBottom: '1em' }}>\n                                            <Row type='flex' align=\"middle\" style={{ paddingTop: 10 }}>\n                                                <Col span={6} offset={2}>\n                                                    <p className=\"description\">\n                                                    The <b>static configuration view</b> can be used to tweak parameters of the geometric\n                                                    system in order to find interesting candidate configurations for use in animations.\n                                                    </p>\n                                                    <p className=\"description\">\n                                                    Parameter types include continuous numeric values, boolean values, and a color palette. \n                                                    </p>\n                                                </Col>\n                                                <Col offset={2}>\n                                                    <DynamicSizingVideo id=\"static-clip\" widthFraction={.5} />\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </TabPane>\n                                    <TabPane tab=\"Layout\" key=\"3\" forceRender>\n                                        <div style={{ marginBottom: '1em' }}>\n                                            <Row type='flex' align=\"middle\" style={{ paddingTop: 10 }}>\n                                                <Col span={6} offset={2}>\n                                                    <p className=\"description\">\n                                                    The <b>layout view</b> offers users the flexibility to manipulate the view layout\n                                                    to maximize screen space while experimenting with different static configurations \n                                                    and animations. \n                                                    </p>\n                                                </Col>\n                                                <Col offset={2}>\n                                                    <DynamicSizingVideo id=\"layout-clip\" widthFraction={.5} />\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </TabPane>\n                                </Tabs>\n                            </div>\n                        </div>\n                    </TabPane>\n                    <TabPane\n                    tab=\"About\"\n                    key=\"2\"\n                    forceRender>\n                        <div style={{ margin: 10}}>\n\n                            <Row type=\"flex\" justify=\"space-around\">\n                                <Col span={16}>\n                                    <p className=\"description\" style={{ marginTop: '1em' }}>\n                                        This application was developed by <b>Bryce Morrow</b>\n                                        <Button \n                                        className=\"social-btn\" \n                                        icon=\"linkedin\" \n                                        shape=\"circle\" \n                                        href=\"https://www.linkedin.com/in/bryce-morrow-181829128/\"\n                                        target=\"_blank\" \n                                        rel=\"noopener noreferrer\"/>\n                                        <Button \n                                        className=\"social-btn\" \n                                        icon=\"github\" \n                                        shape=\"circle\" \n                                        href=\"https://github.com/brycemorrow4564\"\n                                        target=\"_blank\" \n                                        rel=\"noopener noreferrer\"/>\n                                    </p>\n\n                                    <p className=\"description\"> \n                                        I was inspired to start this project when I attended my first electronic music festival.\n                                        For the first time, I saw how artists used custom graphics to create amazing audio-visual \n                                        experiences of music. I knew then and there that it was something that I myself wanted to \n                                        explore. \n                                    </p>\n\n                                    <p className=\"description\"> \n                                        Having no background in 3D graphics, I started simple with a single investigative premise: \n                                        <br></br>\n                                        <b>What kind of graphics could I make using only rectangles?</b>\n                                    </p>\n\n                                    <p className=\"description\"> \n                                        This project is the result of my exploration of that seemingly simple question.\n                                    </p>\n\n                                    <p className=\"description\"> \n                                        After I came up with a generative system that was pretty interesting, I decided that I  \n                                        wanted to make its functionality available to others to use for fun and for free. So \n                                        I built a GUI to allow users to easily explore to possible space of visual effects that\n                                        this tool is capable of. \n                                    </p>\n\n                                    <p className=\"description\"> \n                                        Though the tool has no built in audio component, I enjoy experimenting with the interface\n                                        while listening to music I enjoy. In the future, I might expand the functionality of the \n                                        tool so that it can take audio as an input source and use this signal to drive animations. \n                                    </p>\n\n                                    <p className=\"description\"> \n                                        I hope to have a fully functioning version of the tool online soon! \n                                    </p>\n                                </Col>\n                            </Row>\n\n\n\n                        </div>\n                    </TabPane>\n                </Tabs>\n            </Col>\n        </Row>\n\n        <div className='bottom-spacing'/>\n        \n\n    </React.Fragment>; \n\n}; \n\nexport default AppContent; ","import React from \"react\"; \nimport AppContent from \"./components/AppContent\"; \n\nfunction App(props) {\n    return <AppContent/>;\n}\n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}